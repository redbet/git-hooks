#!/usr/bin/env ruby

# A hook script to verify that only syntactically valid ruby code is commited.
# Called by git-commit with no arguments. The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the commit.
#
# Put this code into a file called "pre-commit" inside your .git/hooks
# directory, and make sure it is executable
require 'open3'

FILES            = /\A(.*?)\s(.*?)\s(.*?)\s(.*)\s[AM]\t+(.+\.(e?rb|rhtml|task|rake|thor)|[Rr]akefile|[Tt]horfile)\z/
git_diff         = 'git diff-index --full-index --cached HEAD'
git_stop         = 'git config --bool hooks.stop-on-warnings'
stop_on_warnings = `#{git_stop}`.chomp != "false"
warnings         = /[0-9]+:\s+warning:/
changed          = `#{git_diff}`.split("\n").grep(FILES) { [$4, $5] }
ruby             = `which ruby`.chomp

erroneous = changed.map do |sha, file|
  processor = case file
  when /\.erb\z/   then "erb -xT -"
  when /\.rhtml\z/ then "erubis -xT -"
  else                  "cat"
  end

  cmd = "git cat-file -p #{sha} | #{processor} | #{ruby} -cw"
  errors = Open3.popen3(cmd) do |_, _, err|
    err.map do |line|
      next if line[warnings] && !stop_on_warnings
      line.sub("-:", '')
    end.compact
  end
  next if errors.empty?

  "#{file}:\n  #{errors.join('  ')}"
end.compact

exit 0 if erroneous.empty?

$stderr.puts erroneous.join("\n")
exit 1
